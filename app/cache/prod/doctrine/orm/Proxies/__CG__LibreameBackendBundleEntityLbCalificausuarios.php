<?php

namespace Proxies\__CG__\Libreame\BackendBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class LbCalificausuarios extends \Libreame\BackendBundle\Entity\LbCalificausuarios implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'incalificacion', 'incalcalificacion', 'txcalobservacion', 'incalreporteabuso', 'incalusucalifica', 'incalusucalificado', 'fefecha');
        }

        return array('__isInitialized__', 'incalificacion', 'incalcalificacion', 'txcalobservacion', 'incalreporteabuso', 'incalusucalifica', 'incalusucalificado', 'fefecha');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (LbCalificausuarios $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIncalificacion()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIncalificacion();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncalificacion', array());

        return parent::getIncalificacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setIncalcalificacion($incalcalificacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIncalcalificacion', array($incalcalificacion));

        return parent::setIncalcalificacion($incalcalificacion);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncalcalificacion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncalcalificacion', array());

        return parent::getIncalcalificacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setTxcalobservacion($txcalobservacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTxcalobservacion', array($txcalobservacion));

        return parent::setTxcalobservacion($txcalobservacion);
    }

    /**
     * {@inheritDoc}
     */
    public function getTxcalobservacion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTxcalobservacion', array());

        return parent::getTxcalobservacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setIncalreporteabuso($incalreporteabuso)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIncalreporteabuso', array($incalreporteabuso));

        return parent::setIncalreporteabuso($incalreporteabuso);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncalreporteabuso()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncalreporteabuso', array());

        return parent::getIncalreporteabuso();
    }

    /**
     * {@inheritDoc}
     */
    public function setIncalusucalifica(\Libreame\BackendBundle\Entity\LbUsuarios $incalusucalifica = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIncalusucalifica', array($incalusucalifica));

        return parent::setIncalusucalifica($incalusucalifica);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncalusucalifica()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncalusucalifica', array());

        return parent::getIncalusucalifica();
    }

    /**
     * {@inheritDoc}
     */
    public function setIncalusucalificado(\Libreame\BackendBundle\Entity\LbUsuarios $incalusucalificado = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIncalusucalificado', array($incalusucalificado));

        return parent::setIncalusucalificado($incalusucalificado);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncalusucalificado()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncalusucalificado', array());

        return parent::getIncalusucalificado();
    }

    /**
     * {@inheritDoc}
     */
    public function setFefecha($feefcha)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFefecha', array($feefcha));

        return parent::setFefecha($feefcha);
    }

    /**
     * {@inheritDoc}
     */
    public function getFefecha()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFefecha', array());

        return parent::getFefecha();
    }

}
