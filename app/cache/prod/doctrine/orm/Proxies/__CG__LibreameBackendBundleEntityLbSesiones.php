<?php

namespace Proxies\__CG__\Libreame\BackendBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class LbSesiones extends \Libreame\BackendBundle\Entity\LbSesiones implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'insesion', 'txsesnumero', 'insesactiva', 'fesesfechaini', 'fesesfechafin', 'txipaddr', 'insesdispusuario');
        }

        return array('__isInitialized__', 'insesion', 'txsesnumero', 'insesactiva', 'fesesfechaini', 'fesesfechafin', 'txipaddr', 'insesdispusuario');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (LbSesiones $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getInsesion()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getInsesion();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsesion', array());

        return parent::getInsesion();
    }

    /**
     * {@inheritDoc}
     */
    public function setTxsesnumero($txsesnumero)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTxsesnumero', array($txsesnumero));

        return parent::setTxsesnumero($txsesnumero);
    }

    /**
     * {@inheritDoc}
     */
    public function getTxsesnumero()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTxsesnumero', array());

        return parent::getTxsesnumero();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsesactiva($insesactiva)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsesactiva', array($insesactiva));

        return parent::setInsesactiva($insesactiva);
    }

    /**
     * {@inheritDoc}
     */
    public function getInsesactiva()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsesactiva', array());

        return parent::getInsesactiva();
    }

    /**
     * {@inheritDoc}
     */
    public function setFesesfechaini($fesesfechaini)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFesesfechaini', array($fesesfechaini));

        return parent::setFesesfechaini($fesesfechaini);
    }

    /**
     * {@inheritDoc}
     */
    public function getFesesfechaini()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFesesfechaini', array());

        return parent::getFesesfechaini();
    }

    /**
     * {@inheritDoc}
     */
    public function setFesesfechafin($fesesfechafin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFesesfechafin', array($fesesfechafin));

        return parent::setFesesfechafin($fesesfechafin);
    }

    /**
     * {@inheritDoc}
     */
    public function getFesesfechafin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFesesfechafin', array());

        return parent::getFesesfechafin();
    }

    /**
     * {@inheritDoc}
     */
    public function setTxipaddr($txipaddr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTxipaddr', array($txipaddr));

        return parent::setTxipaddr($txipaddr);
    }

    /**
     * {@inheritDoc}
     */
    public function getTxipaddr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTxipaddr', array());

        return parent::getTxipaddr();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsesdispusuario(\Libreame\BackendBundle\Entity\LbDispusuarios $insesdispusuario = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsesdispusuario', array($insesdispusuario));

        return parent::setInsesdispusuario($insesdispusuario);
    }

    /**
     * {@inheritDoc}
     */
    public function getInsesdispusuario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsesdispusuario', array());

        return parent::getInsesdispusuario();
    }

}
